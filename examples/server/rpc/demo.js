// Generated by CoffeeScript 1.6.2
(function() {
  var subscriptions;

  subscriptions = require('../../../src/').subscriptions;

  exports.actions = function(req, res, ss) {
    req.use('session');
    return {
      sendMessage: function(data) {
        var content, from, method;

        from = req.session.userId;
        method = 'newMessage';
        content = {
          from: from,
          to: data.to,
          type: data.type,
          message: data.message
        };
        if (!data.to || data.to.toLowerCase() === "all") {
          ss.publish.all(method, content);
        } else {
          if (data.type === "channel") {
            ss.publish.channel(data.to, method, content);
          } else {
            ss.publish.users(data.to, method, content);
            ss.publish.users(from, method, content);
          }
        }
        return res(true);
      },
      logout: function() {
        req.session.setUserId(null, function() {
          ss.publish.all("offline", req.session.userId);
          return ss.publish.all("members", subscriptions.user.keys());
        });
        return res(true);
      },
      subscribe: function(channel) {
        var data;

        data = {
          user: req.session.userId,
          channel: channel
        };
        req.session.channel.subscribe(channel);
        req.session.channel.reset();
        ss.publish.channel(channel, "newMessage", data);
        return res(true);
      },
      unsubscribe: function(channel) {
        req.session.channel.unsubscribe(channel);
        req.session.channel.reset();
        return res(true);
      },
      login: function(mail) {
        console.log(req.socketId);
        req.session.setUserId(mail, function() {
          ss.publish.all('online', mail);
          return ss.publish.all("members", subscriptions.user.keys());
        });
        return res(true);
      }
    };
  };

}).call(this);
